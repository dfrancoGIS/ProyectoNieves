import { Request, Response } from 'express';
import { getAllVehiculos, getVehiculoById, registrarNuevoVehiculo } from '../models/vehiculos';
import { getLastCampaignId } from '../models/equipos'; // üëà Importa correctamente la funci√≥n


// ‚úÖ Obtener todos los veh√≠culos
export const getVehiculos = async (req: Request, res: Response): Promise<void> => {
    try {
        const vehiculos = await getAllVehiculos();
        res.json({ msg: "‚úÖ Veh√≠culos obtenidos correctamente", data: vehiculos });
    } catch (error) {
        console.error("‚ùå Error al obtener veh√≠culos:", error);
        res.status(500).json({ msg: "‚ùå Error al obtener veh√≠culos", error });
    }
};

// ‚úÖ Obtener un veh√≠culo por matr√≠cula
export const getVehiculo = async (req: Request, res: Response): Promise<void> => {
    const { matricula } = req.params;
    try {
        const vehiculo = await getVehiculoById(matricula);
        if (!vehiculo.length) {
            res.status(404).json({ msg: "‚ùå Veh√≠culo no encontrado" });
            return;
        }
        res.json({ msg: "‚úÖ Veh√≠culo encontrado", data: vehiculo[0] });
    } catch (error) {
        console.error("‚ùå Error al obtener el veh√≠culo:", error);
        res.status(500).json({ msg: "‚ùå Error al obtener el veh√≠culo", error });
    }
};

// ‚úÖ Insertar un nuevo veh√≠culo
export const registrarVehiculo = async (req: Request, res: Response): Promise<void> => {
    try {
        console.log("üì• Datos recibidos en la solicitud:", req.body);

        const { matricula, descripcion, recurso, empresa, telefono } = req.body;

        if (!matricula || !descripcion || !recurso || !empresa || !telefono) {
            res.status(400).json({ msg: "‚ùå Todos los campos son obligatorios" });
            return;
        }

        // ‚úÖ Obtener la √∫ltima campa√±a activa
        const idCampania = await getLastCampaignId();  // üìå No devuelve un array, sino un n√∫mero o null

        if (!idCampania) {
            res.status(400).json({ msg: "‚ùå No hay campa√±as activas disponibles" });
            return;
        }

        // ‚úÖ Llamar a la funci√≥n de inserci√≥n
        await registrarNuevoVehiculo(matricula, descripcion, recurso, empresa, telefono, idCampania);

        res.json({ msg: "‚úÖ Veh√≠culo registrado correctamente" });
    } catch (error) {
        console.error("‚ùå Error al registrar el veh√≠culo:", error);
        res.status(500).json({ msg: "‚ùå Error al registrar el veh√≠culo", error });
    }
};

